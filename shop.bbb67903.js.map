{"mappings":"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","sources":["src/js/cart.js"],"sourcesContent":["var d = document,\n    itemBox = d.querySelectorAll('.item_box'), // блок каждого товара\n    cartCont = d.getElementById('cart_content'); // блок вывода данных корзины\n// Функция кроссбраузерной установка обработчика событий\nfunction addEvent(elem, type, handler){\n  if(elem.addEventListener){\n    elem.addEventListener(type, handler, false);\n  } else {\n    elem.attachEvent('on'+type, function(){ handler.call( elem ); });\n  }\n  return false;\n}\n// Получаем данные из LocalStorage\nfunction getCartData(){\n  return JSON.parse(localStorage.getItem('cart'));\n}\n// Записываем данные в LocalStorage\nfunction setCartData(o){\n  localStorage.setItem('cart', JSON.stringify(o));\n  return false;\n}\n// Добавляем товар в корзину\nfunction addToCart(e){\n  this.disabled = true; // блокируем кнопку на время операции с корзиной\n  var cartData = getCartData() || {}, // получаем данные корзины или создаём новый объект, если данных еще нет\n      parentBox = this.parentNode, // родительский элемент кнопки \"Добавить в корзину\"\n      itemId = this.getAttribute('data-id'), // ID товара\n      itemTitle = parentBox.querySelector('.item_title').innerHTML, // название товара\n      itemPrice = parentBox.querySelector('.item_price').innerHTML; // стоимость товара\n  if(cartData.hasOwnProperty(itemId)){ // если такой товар уже в корзине, то добавляем +1 к его количеству\n    cartData[itemId][2] += 1;\n  } else { // если товара в корзине еще нет, то добавляем в объект\n    cartData[itemId] = [itemTitle, itemPrice, 1];\n  }\n  if(!setCartData(cartData)){ // Обновляем данные в LocalStorage\n    this.disabled = false; // разблокируем кнопку после обновления LS\n  }\n return false;\n}\n// Устанавливаем обработчик события на каждую кнопку \"Добавить в корзину\"\nfor(var i = 0; i < itemBox.length; i++){\n  addEvent(itemBox[i].querySelector('.add_item'), 'click', addToCart);\n}\n// Открываем корзину со списком добавленных товаров\nfunction openCart(e){\n  var cartData = getCartData(), // вытаскиваем все данные корзины\n      totalItems = '';\n  // если что-то в корзине уже есть, начинаем формировать данные для вывода\n  if(cartData !== null){\n    totalItems = '<table class=\"shopping_list\"><tr><th>Назва</th><th>Ціна</th><th>Кількість</th></tr>';\n    for(var items in cartData){\n      totalItems += '<tr>';\n      for(var i = 0; i < cartData[items].length; i++){\n        totalItems += '<td>' + cartData[items][i] + '</td>';\n      }\n      totalItems += '</tr>';\n    }\n    totalItems += '</table>';\n    cartCont.innerHTML = totalItems;\n  } else {\n    // если в корзине пусто, то сигнализируем об этом\n    cartCont.innerHTML = 'В корзине пусто!';\n  }\n  return false;\n}\n/* Открыть корзину */\naddEvent(d.getElementById('checkout'), 'click', openCart);\n/* Очистить корзину */\naddEvent(d.getElementById('clear_cart'), 'click', function(e){\n  localStorage.removeItem('cart');\n  cartCont.innerHTML = 'Кошик пустий.';\n});\n\n\n// Функция отправки заказа на почту\nfunction sendOrderToEmail() {\n  var cartData = getCartData(); // Получаем данные корзины\n\n  // Если корзина не пуста\n  if (cartData !== null) {\n    var orderDetails = '';\n    for (var items in cartData) {\n      var itemTitle = cartData[items][0]; // Название товара\n      var itemPrice = cartData[items][1]; // Стоимость товара\n      var itemQuantity = cartData[items][2]; // Количество товара\n\n      // Формируем строку с деталями заказа\n      orderDetails += itemTitle + ' - ' + itemPrice + ' - ' + itemQuantity + ' шт.\\n';\n    }\n\n    // Здесь замените 'your-email@example.com' на ваш email\n    var recipientEmail = 'wildfow85@gmail.com';\n    var emailSubject = 'Заказ из интернет-магазина';\n    var emailBody = 'Детали заказа:\\n\\n' + orderDetails;\n\n    // Создаем ссылку для отправки письма\n    var mailToLink = 'mailto:' + recipientEmail + '?subject=' + encodeURIComponent(emailSubject) + '&body=' + encodeURIComponent(emailBody);\n\n    // Открываем ссылку для отправки письма\n    window.location.href = mailToLink;\n  } else {\n    alert('Корзина пуста! Добавьте товары перед оформлением заказа.');\n  }\n\n  return false;\n}\n\n/* Открыть корзину */\naddEvent(d.getElementById('checkout'), 'click', function(e){\n  openCart(e); // Открываем корзину со списком добавленных товаров\n  sendOrderToEmail(); // Отправляем заказ на почту\n});\n\nfunction addToCart(e) {\n  this.disabled = true; // блокируем кнопку на время операции с корзиной\n  var cartData = getCartData() || {}, // получаем данные корзины или создаём новый объект, если данных еще нет\n      parentBox = this.parentNode, // родительский элемент кнопки \"Добавить в корзину\"\n      itemId = this.getAttribute('data-id'), // ID товара\n      itemTitle = parentBox.querySelector('.item_title').innerHTML, // название товара\n      itemPrice = parentBox.querySelector('.item_price').innerHTML; // стоимость товара\n  if (cartData.hasOwnProperty(itemId)) { // если такой товар уже в корзине, то добавляем +1 к его количеству\n    cartData[itemId][2] += 1;\n  } else { // если товара в корзине еще нет, то добавляем в объект\n    cartData[itemId] = [itemTitle, itemPrice, 1];\n  }\n  if (!setCartData(cartData)) { // Обновляем данные в LocalStorage\n    this.disabled = false; // разблокируем кнопку после обновления LS\n  }\n\n  // Show the cart content after adding the item\n  openCart(e);\n\n  return false;\n}\n\n/* Открыть корзину */\naddEvent(d.getElementById('checkout'), 'click', openCart);\n\n\n// Открываем корзину со списком добавленных товаров\nfunction openCart(e) {\n  var cartData = getCartData(); // вытаскиваем все данные корзины\n  var totalItems = '';\n  var totalPrice = 0; // добавляем переменную для общей суммы покупки\n\n  // если что-то в корзине уже есть, начинаем формировать данные для вывода\n  if (cartData !== null) {\n    totalItems = '<table class=\"shopping_list\"><tr><th>назва</th><th>ціна</th><th>кількість</th><th>сума</th></tr>';\n    for (var items in cartData) {\n      totalItems += '<tr>';\n      for (var i = 0; i < cartData[items].length; i++) {\n        totalItems += '<td>' + cartData[items][i] + '</td>';\n      }\n\n      // Calculate and display the individual item amount (price * quantity)\n      var itemPrice = parseFloat(cartData[items][1].replace(/\\s+/g, '').replace(',', '.')); // assuming the price format is \"123.45\" or \"123,45\"\n      var itemQuantity = cartData[items][2];\n      var itemAmount = itemPrice * itemQuantity;\n      totalItems += '<td>' + itemAmount.toFixed(2) + '</td>';\n\n      totalItems += '</tr>';\n\n      // Accumulate the total purchase amount\n      totalPrice += itemAmount;\n    }\n\n    totalItems += '<tr><td colspan=\"3\"><strong>до сплати:</strong></td><td>' + totalPrice.toFixed(2) + '</td></tr>';\n    totalItems += '</table>';\n    cartCont.innerHTML = totalItems;\n  } else {\n    // если в корзине пусто, то сигнализируем об этом\n    cartCont.innerHTML = 'В корзине пусто!';\n  }\n  return false;\n}\n\n\n// Удалить один товар из корзины\nfunction removeOneItem(itemId) {\n  var cartData = getCartData();\n\n  if (cartData !== null && cartData.hasOwnProperty(itemId)) {\n    if (cartData[itemId][2] > 1) {\n      cartData[itemId][2] -= 1;\n    } else {\n      delete cartData[itemId];\n    }\n    setCartData(cartData); // Обновляем данные в LocalStorage\n    openCart(); // Обновляем содержимое корзины после удаления товара\n  }\n}\n\n// Устанавливаем обработчик события на каждую кнопку \"Удалить товар\"\nvar removeButtons = document.querySelectorAll('.away_item');\nfor (var i = 0; i < removeButtons.length; i++) {\n  addEvent(removeButtons[i], 'click', function (e) {\n    var itemId = this.getAttribute('data-id');\n    removeOneItem(itemId);\n  });\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"names":["d","document","itemBox","querySelectorAll","cartCont","getElementById","addEvent","elem","type","handler","addEventListener","attachEvent","call","getCartData","JSON","parse","localStorage","getItem","setCartData","o","setItem","stringify","addToCart","e","this","disabled","cartData","parentBox","parentNode","itemId","getAttribute","itemTitle","querySelector","innerHTML","itemPrice","hasOwnProperty","i","length","openCart","totalItems","items","i1","sendOrderToEmail","orderDetails","emailBody","mailToLink","encodeURIComponent","window","location","href","alert","totalPrice","i2","itemAmount","parseFloat","replace","toFixed","removeOneItem","removeItem","removeButtons"],"version":3,"file":"shop.bbb67903.js.map"}
{"mappings":"AAsNmDA,SAAxCC,iBAAiB,oBAAoB,WAC5C,IAAMC,EAAcF,SAASG,cAAc,iBACrCC,EAAcJ,SAASK,eAAe,gBACtCC,EAAcN,SAASK,eAAe,YACtCE,EAAeP,SAASK,eAAe,cAGQ,SAA5CG,IACP,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,eAAiB,GAIf,SAAlCC,EAAWC,GAClBH,aAAaI,QAAQ,YAAaN,KAAKO,UAAUF,IASf,SAA3BG,IACPb,EAAYc,UAAY,GACxB,IAAMJ,EAAYN,IAClB,GAAyB,IAArBM,EAAUK,OAAd,CAIEjB,EAAYkB,MAAMC,QAAU,QAG9BP,EAAUQ,SAAQ,SAAAC,GAChB,IAAMC,EAAUxB,SAASyB,cAAc,OACvCD,EAAQE,UAAUC,IAAI,iBAEtB,IAAMC,EAAW5B,SAASyB,cAAc,MACxCG,EAASC,UAAYN,EAAKO,KAE1B,IAAMC,EAAe/B,SAASyB,cAAc,QAC5CM,EAAaF,UAAY,cAAqCG,OAAdT,EAAKU,UAE5C,IAAHC,EAAYlC,SAASyB,cAAc,QACzCS,EAAUL,UAAY,SAAwBG,OAAXT,EAAKY,MAAM,KAE1CX,EAAIY,YAAYR,GACpBJ,EAAQY,YAAYL,GACpBP,EAAQY,YAAYF,GAEpB,IAAMG,EAAcrC,SAASyB,cAAc,UAC3CY,EAAYR,UAAY,IACxBQ,EAAYpC,iBAAiB,SAAS,WACpCsB,EAAKU,WACLpB,EAAWC,GACXG,OAGF,IAAMqB,EAActC,SAASyB,cAAc,UAC3Ca,EAAYT,UAAY,IACxBS,EAAYrC,iBAAiB,SAAS,WAChCsB,EAAKU,SAAW,IAClBV,EAAKU,WACLpB,EAAWC,GACXG,QAIJO,EAAQY,YAAYC,GACpBb,EAAQY,YAAYE,GAEpBlC,EAAYgC,YAAYZ,MAG1B,IAAMe,EAxD+B,SAAfzB,GACtB,OAAOA,EAAU0B,QAAO,SAACD,EAAOhB,G,OAASgB,EAAQhB,EAAKU,SAAWV,EAAKY,QAAO,GAuD/DM,CAAe3B,GACvB4B,EAAW1C,SAASyB,cAAc,OACxCiB,EAASxB,UAAY,kCAA+Dc,OAANO,EAAM,UAC7DnC,EAAXgC,YAAYM,QAlDtBxC,EAAYkB,MAAMC,QAAU,OAsER,SAAfsB,IACPhC,aAAaiC,WAAW,aACxB3B,IAYuBjB,SAAS6C,iBAAiB,aAClCvB,SAAQ,SAAAwB,GACvBA,EAAO7C,iBAAiB,SAAS,WAC/B,IAjCesB,EACXT,EACAiC,EA+BEvB,EAAUsB,EAAOE,QAAQ,aACzBpB,EAAWJ,EAAQrB,cAAc,eAAe0B,UAChDK,EAAYe,SAASzB,EAAQrB,cAAc,eAAe0B,WAC1DqB,EAASD,SAASH,EAAOK,QAAQC,IApCxB7B,EAsCL,CAAE6B,GAAIF,EAAQpB,KAAMF,EAAUO,MAAOD,GArC3CpB,EAAYN,KAEQ,KADpBuC,EAAoBjC,EAAUuC,WAAU,SAAAC,G,OAAKA,EAAEF,KAAO7B,EAAK6B,OAG/DtC,EAAUiC,GAAmBd,UAAY,GAGzCV,EAAKU,SAAW,EAChBnB,EAAUyC,KAAKhC,IAEjBV,EAAWC,GACXG,UA+B4BjB,SAAS6C,iBAAiB,cAClCvB,SAAQ,SAAAwB,GAC5BA,EAAO7C,iBAAiB,SAAS,WAC/B,IAAMiD,EAASD,SAASH,EAAOK,QAAQC,IAGvCvC,EAFkBL,IACiBgD,QAAO,SAAAjC,G,OAAQA,EAAK6B,KAAOF,MAE9DjC,UAKcX,EAANL,iBAAiB,SAAS,WA7BawD,MAA3C,qCA+BNd,OAIWpC,EAAAN,iBAAiB,SAAS,WACrC0C,OAIF1B","sources":["src/js/cart.js"],"sourcesContent":["\n// var d = document,\n//     itemBox = d.querySelectorAll('.item_box'), // блок каждого товара\n//     cartCont = d.getElementById('cart_content'); // блок вывода данных корзины\n// // Функция кроссбраузерной установка обработчика событий\n// function addEvent(elem, type, handler){\n//   if(elem.addEventListener){\n//     elem.addEventListener(type, handler, false);\n//   } else {\n//     elem.attachEvent('on'+type, function(){ handler.call( elem ); });\n//   }\n//   return false;\n// }\n// // Получаем данные из LocalStorage\n// function getCartData(){\n//   return JSON.parse(localStorage.getItem('cart'));\n// }\n// // Записываем данные в LocalStorage\n// function setCartData(o){\n//   localStorage.setItem('cart', JSON.stringify(o));\n//   return false;\n// }\n// // Добавляем товар в корзину\n// function addToCart(e){\n//   this.disabled = true; // блокируем кнопку на время операции с корзиной\n//   var cartData = getCartData() || {}, // получаем данные корзины или создаём новый объект, если данных еще нет\n//       parentBox = this.parentNode, // родительский элемент кнопки \"Добавить в корзину\"\n//       itemId = this.getAttribute('data-id'), // ID товара\n//       itemTitle = parentBox.querySelector('.item_title').innerHTML, // название товара\n//       itemPrice = parentBox.querySelector('.item_price').innerHTML; // стоимость товара\n//   if(cartData.hasOwnProperty(itemId)){ // если такой товар уже в корзине, то добавляем +1 к его количеству\n//     cartData[itemId][2] += 1;\n//   } else { // если товара в корзине еще нет, то добавляем в объект\n//     cartData[itemId] = [itemTitle, itemPrice, 1];\n//   }\n//   if(!setCartData(cartData)){ // Обновляем данные в LocalStorage\n//     this.disabled = false; // разблокируем кнопку после обновления LS\n//   }\n//  return false;\n// }\n// // Устанавливаем обработчик события на каждую кнопку \"Добавить в корзину\"\n// for(var i = 0; i < itemBox.length; i++){\n//   addEvent(itemBox[i].querySelector('.add_item'), 'click', addToCart);\n// }\n// // // Открываем корзину со списком добавленных товаров\n// function openCart(e){\n//   var cartData = getCartData(), // вытаскиваем все данные корзины\n//       totalItems = '';\n//   // если что-то в корзине уже есть, начинаем формировать данные для вывода\n//   if(cartData !== null){\n//     totalItems = '<table class=\"shopping_list\"><tr><th>Назва</th><th>Ціна</th><th>Кількість</th></tr>';\n//     for(var items in cartData){\n//       totalItems += '<tr>';\n//       for(var i = 0; i < cartData[items].length; i++){\n//         totalItems += '<td>' + cartData[items][i] + '</td>';\n//       }\n//       totalItems += '</tr>';\n//     }\n//     totalItems += '</table>';\n//     cartCont.innerHTML = totalItems;\n//   } else {\n//     // если в корзине пусто, то сигнализируем об этом\n//     cartCont.innerHTML = 'В корзине пусто!';\n//   }\n//   return false;\n// }\n// /* Открыть корзину */\n// addEvent(d.getElementById('checkout'), 'click', openCart);\n// /* Очистить корзину */\n// addEvent(d.getElementById('clear_cart'), 'click', function(e){\n//   localStorage.removeItem('cart');\n//   cartCont.innerHTML = 'Кошик пустий.';\n// });\n\n\n// // Функция отправки заказа на почту\n// function sendOrderToEmail() {\n//   var cartData = getCartData(); // Получаем данные корзины\n\n//   // Если корзина не пуста\n//   if (cartData !== null) {\n//     var orderDetails = '';\n//     for (var items in cartData) {\n//       var itemTitle = cartData[items][0]; // Название товара\n//       var itemPrice = cartData[items][1]; // Стоимость товара\n//       var itemQuantity = cartData[items][2]; // Количество товара\n\n//       // Формируем строку с деталями заказа\n//       orderDetails += itemTitle + ' - ' + itemPrice + ' - ' + itemQuantity + ' шт.\\n';\n//     }\n\n//     // Здесь замените 'your-email@example.com' на ваш email\n//     var recipientEmail = 'wildfow85@gmail.com';\n//     var emailSubject = 'Заказ из интернет-магазина';\n//     var emailBody = 'Детали заказа:\\n\\n' + orderDetails;\n\n//     // Создаем ссылку для отправки письма\n//     var mailToLink = 'mailto:' + recipientEmail + '?subject=' + encodeURIComponent(emailSubject) + '&body=' + encodeURIComponent(emailBody);\n\n//     // Открываем ссылку для отправки письма\n//     window.location.href = mailToLink;\n//   } else {\n//     alert('Корзина пуста! Добавьте товары перед оформлением заказа.');\n//   }\n\n//   return false;\n// }\n\n// /* Открыть корзину */\n// addEvent(d.getElementById('checkout'), 'click', function(e){\n//   openCart(e); // Открываем корзину со списком добавленных товаров\n//   sendOrderToEmail(); // Отправляем заказ на почту\n// });\n\n// function addToCart(e) {\n//   this.disabled = true; // блокируем кнопку на время операции с корзиной\n//   var cartData = getCartData() || {}, // получаем данные корзины или создаём новый объект, если данных еще нет\n//       parentBox = this.parentNode, // родительский элемент кнопки \"Добавить в корзину\"\n//       itemId = this.getAttribute('data-id'), // ID товара\n//       itemTitle = parentBox.querySelector('.item_title').innerHTML, // название товара\n//       itemPrice = parentBox.querySelector('.item_price').innerHTML; // стоимость товара\n//   if (cartData.hasOwnProperty(itemId)) { // если такой товар уже в корзине, то добавляем +1 к его количеству\n//     cartData[itemId][2] += 1;\n//   } else { // если товара в корзине еще нет, то добавляем в объект\n//     cartData[itemId] = [itemTitle, itemPrice, 1];\n//   }\n//   if (!setCartData(cartData)) { // Обновляем данные в LocalStorage\n//     this.disabled = false; // разблокируем кнопку после обновления LS\n//   }\n\n//   // Show the cart content after adding the item\n//   openCart(e);\n\n//   return false;\n// }\n\n// /* Открыть корзину */\n// addEvent(d.getElementById('checkout'), 'click', openCart);\n\n\n// // Открываем корзину со списком добавленных товаров\n// function openCart(e) {\n//   var cartData = getCartData(); // вытаскиваем все данные корзины\n//   var totalItems = '';\n//   var totalPrice = 0; // добавляем переменную для общей суммы покупки\n\n//   // если что-то в корзине уже есть, начинаем формировать данные для вывода\n//   if (cartData !== null) {\n//     totalItems = '<table class=\"shopping_list\"><tr><th>назва</th><th>ціна</th><th>кількість</th><th>сума</th></tr>';\n//     for (var items in cartData) {\n//       totalItems += '<tr>';\n//       for (var i = 0; i < cartData[items].length; i++) {\n//         totalItems += '<td>' + cartData[items][i] + '</td>';\n//       }\n\n//       // Calculate and display the individual item amount (price * quantity)\n//       var itemPrice = parseFloat(cartData[items][1].replace(/\\s+/g, '').replace(',', '.')); // assuming the price format is \"123.45\" or \"123,45\"\n//       var itemQuantity = cartData[items][2];\n//       var itemAmount = itemPrice * itemQuantity;\n//       totalItems += '<td>' + itemAmount.toFixed(2) + '</td>';\n\n//       totalItems += '</tr>';\n\n//       // Accumulate the total purchase amount\n//       totalPrice += itemAmount;\n//     }\n\n//     totalItems += '<tr><td colspan=\"3\"><strong>до сплати:</strong></td><td>' + totalPrice.toFixed(2) + '</td></tr>';\n//     totalItems += '</table>';\n//     cartCont.innerHTML = totalItems;\n//   } else {\n//     // если в корзине пусто, то сигнализируем об этом\n//     cartCont.innerHTML = 'В корзине пусто!';\n//   }\n//   return false;\n// }\n\n\n// // Удалить один товар из корзины\n// function removeOneItem(itemId) {\n//   var cartData = getCartData();\n\n//   if (cartData !== null && cartData.hasOwnProperty(itemId)) {\n//     if (cartData[itemId][2] > 1) {\n//       cartData[itemId][2] -= 1;\n//     } else {\n//       delete cartData[itemId];\n//     }\n//     setCartData(cartData); // Обновляем данные в LocalStorage\n//     openCart(); // Обновляем содержимое корзины после удаления товара\n//   }\n// }\n\n// // Устанавливаем обработчик события на каждую кнопку \"Удалить товар\"\n// var removeButtons = document.querySelectorAll('.away_item');\n// for (var i = 0; i < removeButtons.length; i++) {\n//   addEvent(removeButtons[i], 'click', function (e) {\n//     var itemId = this.getAttribute('data-id');\n//     removeOneItem(itemId);\n//   });\n// }\n\n\n\n\n\n\n// var d = document,\n//     itemBox = d.querySelectorAll('.item_box'), // блок каждого товара\n//     cartCont = d.getElementById('cart_content'); // блок вывода данных корзины\n// // Функция кроссбраузерной установка обработчика событий\n\n\n\n  document.addEventListener('DOMContentLoaded', function () {\n    const cartOverlay = document.querySelector('.cart_overlay');\n    const cartContent = document.getElementById('cart_content');\n    const checkoutBtn = document.getElementById('checkout');\n    const clearCartBtn = document.getElementById('clear_cart');\n\n    // функція, щоб отримати елементи кошика з локального зберігання\n    function getCartItems() {\n      return JSON.parse(localStorage.getItem('cartItems')) || [];\n    }\n\n    // функція для оновлення кошика в локальному сховищі\n    function updateCart(cartItems) {\n      localStorage.setItem('cartItems', JSON.stringify(cartItems));\n    }\n\n    // функція для обчислення загальної ціни кошика\n    function calculateTotal(cartItems) {\n      return cartItems.reduce((total, item) => total + item.quantity * item.price, 0);\n    }\n\n    // функція для візуалізації елементів візка\n    function renderCart() {\n      cartContent.innerHTML = '';\n      const cartItems = getCartItems();\n      if (cartItems.length === 0) {\n        cartOverlay.style.display = 'none';\n        return;\n      } else {\n        cartOverlay.style.display = 'block';\n      }\n\n      cartItems.forEach(item => {\n        const itemBox = document.createElement('div');\n        itemBox.classList.add('cart_item_box');\n\n        const itemName = document.createElement('h3');\n        itemName.innerText = item.name;\n\n        const itemQuantity = document.createElement('span');\n        itemQuantity.innerText = `Кількість: ${item.quantity}`;\n\n        const itemPrice = document.createElement('span');\n        itemPrice.innerText = `Ціна: ${item.price}$`;\n\n        itemBox.appendChild(itemName);\n        itemBox.appendChild(itemQuantity);\n        itemBox.appendChild(itemPrice);\n\n        const increaseBtn = document.createElement('button');\n        increaseBtn.innerText = '+';\n        increaseBtn.addEventListener('click', () => {\n          item.quantity++;\n          updateCart(cartItems);\n          renderCart();\n        });\n\n        const decreaseBtn = document.createElement('button');\n        decreaseBtn.innerText = '-';\n        decreaseBtn.addEventListener('click', () => {\n          if (item.quantity > 1) {\n            item.quantity--;\n            updateCart(cartItems);\n            renderCart();\n          }\n        });\n\n        itemBox.appendChild(increaseBtn);\n        itemBox.appendChild(decreaseBtn);\n\n        cartContent.appendChild(itemBox);\n      });\n\n      const total = calculateTotal(cartItems);\n      const totalBox = document.createElement('div');\n      totalBox.innerHTML = `<h2>Загальна вартість товарів: ${total}$</h2>`;\n      cartContent.appendChild(totalBox);\n    }\n\n    // функція для додавання елемента до кошика\n    function addToCart(item) {\n      const cartItems = getCartItems();\n      const existingItemIndex = cartItems.findIndex(i => i.id === item.id);\n      if (existingItemIndex !== -1) {\n        // Item already exists in the cart, update the quantity directly\n        cartItems[existingItemIndex].quantity += 0;\n      } else {\n        // Item does not exist in the cart, add it with quantity 1\n        item.quantity = 1;\n        cartItems.push(item);\n      }\n      updateCart(cartItems);\n      renderCart();\n    }\n\n    // функція для очищення кошика\n    function clearCart() {\n      localStorage.removeItem('cartItems');\n      renderCart();\n    }\n\n    // функція для надсилання замовлення на електронну пошту (необхідна реалізація)\n    function sendOrder() {\n      // Впровадження надсилання замовлення на електронну пошту тут\n      // вам може знадобитися використовувати сценарій на стороні сервера для обробки надсилання електронної пошти\n      // Для демонстраційних цілей ми просто покажемо сповіщення\n      alert('Order has been sent to the email!');\n    }\n\n    // Add event listeners for \"до кошика\" buttons\n    const addToCartButtons = document.querySelectorAll('.add_item');\n    addToCartButtons.forEach(button => {\n      button.addEventListener('click', function () {\n        const itemBox = button.closest('.item_box');\n        const itemName = itemBox.querySelector('.item_title').innerText;\n        const itemPrice = parseInt(itemBox.querySelector('.item_price').innerText);\n        const itemId = parseInt(button.dataset.id);\n\n        addToCart({ id: itemId, name: itemName, price: itemPrice });\n      });\n    });\n\n    // Add event listener for \"видалити\" buttons\n    const removeFromCartButtons = document.querySelectorAll('.away_item');\n    removeFromCartButtons.forEach(button => {\n      button.addEventListener('click', function () {\n        const itemId = parseInt(button.dataset.id);\n        const cartItems = getCartItems();\n        const updatedCartItems = cartItems.filter(item => item.id !== itemId);\n        updateCart(updatedCartItems);\n        renderCart();\n      });\n    });\n\n    // Add event listener for \"Оформити замовлення\" button\n    checkoutBtn.addEventListener('click', function () {\n      sendOrder();\n      clearCart();\n    });\n\n    // Add event listener for \"Очистити кошик\" button\n    clearCartBtn.addEventListener('click', function () {\n      clearCart();\n    });\n\n   // Початкова візуалізація кошика\n    renderCart();\n  });\n\n\n\n  \n\n\n\n"],"names":["document","addEventListener","cartOverlay","querySelector","cartContent","getElementById","checkoutBtn","clearCartBtn","getCartItems","JSON","parse","localStorage","getItem","updateCart","cartItems","setItem","stringify","renderCart","innerHTML","length","style","display","forEach","item","itemBox","createElement","classList","add","itemName","innerText","name","itemQuantity","concat","quantity","itemPrice","price","appendChild","increaseBtn","decreaseBtn","total","reduce","calculateTotal","totalBox","clearCart","removeItem","querySelectorAll","button","existingItemIndex","closest","parseInt","itemId","dataset","id","findIndex","i","push","filter","alert"],"version":3,"file":"index.bb0fae0e.js.map"}